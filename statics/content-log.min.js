let latestLogTimestamp=-1;const runLogUpdater=async()=>{try{await updateLog()}catch{}setTimeout(runLogUpdater,2e4)},updateLog=async()=>{debug(me(),"updating log");try{const res=await getData(`${BASE_SCRIPT_URL}?req=api-log&last=${latestLogTimestamp}`);if(res.success&&200===res.statusCode){const data=res.data,log=res.data.reverse();latestLogTimestamp=log[0].ts;const logHtml=log.map(line=>`${formatDateTime(new Date(1e3*line.ts))} - ${line.str}\n`);qs("#porssi-log").innerHTML=logHtml.join("")}else res.success&&204===res.statusCode?debug(me(),"No new data for log"):(debug(me(),"Failed to read log:",res),console.error("Failed to read log:",res))}catch(err){debug(me(),"Error reading log: ",err),console.error("Error reading log: ",err)}},logOnLoad=async()=>{debug(me(),"onload begin"),toggleLoading("Ladataan lokia..."),await runLogUpdater(),toggleLoading(),debug(me(),"onload done")};logOnLoad();